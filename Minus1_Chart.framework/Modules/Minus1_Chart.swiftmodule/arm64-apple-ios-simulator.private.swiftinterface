// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios18.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -module-name Minus1_Chart
import Combine
import Foundation
@_exported import Minus1_Chart
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_Concurrency.MainActor @preconcurrency public struct CandleStickChartView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init()
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s12Minus1_Chart011CandleStickB4ViewV4bodyQrvp", 0) __
}
@_Concurrency.MainActor @preconcurrency public struct CandlestickChartView_Previews : SwiftUI.PreviewProvider {
  @_Concurrency.MainActor @preconcurrency public static var previews: some SwiftUICore.View {
    get
  }
  public typealias Previews = @_opaqueReturnTypeOf("$s12Minus1_Chart011CandlestickB13View_PreviewsV8previewsQrvpZ", 0) __
}
public struct CryptoCandle : Swift.Identifiable, Swift.Codable, Swift.Equatable {
  public let id: Foundation.UUID
  public let openTime: Foundation.Date
  public let open: Swift.Double
  public let high: Swift.Double
  public let low: Swift.Double
  public let close: Swift.Double
  public let volume: Swift.Double
  public let closeTime: Foundation.Date
  public let quoteAssetVolume: Swift.Double
  public let numberOfTrades: Swift.Int
  public let takerBuyBaseAssetVolume: Swift.Double
  public let takerBuyQuoteAssetVolume: Swift.Double
  public static func == (a: Minus1_Chart.CryptoCandle, b: Minus1_Chart.CryptoCandle) -> Swift.Bool
  public typealias ID = Foundation.UUID
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct BinanceKlineResponse : Swift.Decodable {
  public init(from decoder: any Swift.Decoder) throws
}
extension Minus1_Chart.CandleStickChartView : Swift.Sendable {}
extension Minus1_Chart.CandlestickChartView_Previews : Swift.Sendable {}
